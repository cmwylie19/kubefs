name: Build/Push Action

on:
  push:
    tags: ["*"]
  # workflow_run:
  #   workflows: ["Run Tests"]
  #   branches: [main]
  #   types: 
  #     - completed

jobs:
  unit-test-frontend:
    name: unit-test-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v3
      - name: Unit Test Frontend
        run: | 
          cd frontend;
          yarn -s;
          yarn run test-ci;
          echo "Exited with '$?'"

  unit-test-backend:
    needs: unit-test-frontend
    name: unit-test-backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Unit Test Backend
        run: | 
          cd server;
          go mod tidy;
          ENV=CI go test -v ./...;
          echo "Exited with '$?'"

      - run: echo "🍏 This job's status is ${{ job.status }}."

  build-backend:
    needs: unit-test-backend
    name: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: build binary
        run: | 
          cd server;
          go mod tidy;
          GOARCH=arm64 GOOS=linux go build -o kubefs ./cmd/kubefs
          mv kubefs build/kubefs
          echo "Exited with '$?'"

      - run: echo "🍏 This job's status is ${{ job.status }}."

  setup-build-push-deploy:
    needs: build-backend
    name: build-containers-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Build and push server
        uses: docker/build-push-action@v2
        with:
          context: ./server/build
          push: true
          tags: cmwylie19/kubefs:${{ env.RELEASE_VERSION }}


      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: cmwylie19/kubefs-web:${{ env.RELEASE_VERSION }}

      - name: update server source
        run: | 
          IMAGE=$(cat server/env/overlays/stage/version.yml | egrep image: | sed 's/image: //g' | awk '{$1=$1};1')
          NEW_IMAGE=$(echo ${IMAGE%:*}:${RELEASE_VERSION})

          # Insert backslash
          NEW_IMAGE=$(echo "$NEW_IMAGE" | sed  's#/#\\/#g')
          IMAGE=$(echo "$IMAGE" | sed  's#/#\\/#g')



          sed "s/$IMAGE/$NEW_IMAGE/g" server/env/overlays/stage/version.yml > server/env/overlays/stage/version.yml

      - name: update frontend source
        run: | 
          IMAGE=$(cat frontend/env/overlays/stage/version.yml | egrep image: | sed 's/image: //g' | awk '{$1=$1};1')
          NEW_IMAGE=$(echo ${IMAGE%:*}:${RELEASE_VERSION})

          # Insert backslash
          NEW_IMAGE=$(echo "$NEW_IMAGE" | sed  's#/#\\/#g')
          IMAGE=$(echo "$IMAGE" | sed  's#/#\\/#g')



          sed "s/$IMAGE/$NEW_IMAGE/g" frontend/env/overlays/stage/version.yml > frontend/env/overlays/stage/version.yml
      - run: echo "🍏 This job's status is ${{ job.status }}."
  push-to-git:
    name: push-to-git
    runs-on: ubuntu-latest
    needs: build-containers-and-deploy
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV


      # - name: Set up Node.js
      #   uses: actions/setup-node@v3

      # - name: Install dependencies
      #   run: npm install

      # - name: Update source code
      #   run: eslint "src/**" --fix

      - name: Update frontend version
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Casey Wylie
          author_email: cmwylie19@gmail.com
          message: '[TASK] Updating staging images'
          add: 'frontend/env/overlays/stage/version.yml'

      - name: Update backend version
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Casey Wylie
          author_email: cmwylie19@gmail.com
          message: '[TASK] Updating staging images'
          add: 'frontend/env/overlays/stage/version.yml'
          push: true
          tag: '${{ env.RELEASE_VERSION }} --force'
          tag_push: '--force'